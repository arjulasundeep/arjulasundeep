# ===============================
# Database Import and Logging
# ===============================

# Set here configurations for the database connection
logging.level.root=INFO
logging.level.sample.mybatis.mapper=TRACE

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database IV - schema
iv.app.datasource.jdbc-url = {{ iv_jdbc_url }}
iv.app.datasource.username = {{ iv_jdbc_user }}
iv.app.datasource.password = {{ iv_jdbc_pswd }}
iv.app.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
iv.app.datasource.testWhileIdle = true
iv.app.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.id.new_generator_mappings = false

spring.hazelcast.config = classpath:conf/hazelcast.xml

iv.email.notification.from.sender = {{ iv_email_sender }}
# notification type sent after registration: NONE, OTP, URL_LINK
iv.registration.email.notification.type = URL_LINK 
	
spring.mail.host = {{ iv_email_host }}
spring.mail.port = {{ iv_email_port }}
spring.mail.username = {{ iv_email_user }}
spring.mail.password = {{ iv_email_pswd }}
spring.mail.properties.mail.smtp.auth = {{ iv_email_smtp_auth }}
spring.mail.properties.mail.smtp.starttls.enable = {{ iv_email_TLS_enable }}

#QA, DEMO, PROD
iv.server.mode = QA

#9000000 - retract PI interval @ 15 minutes
iv.pi.retract.interval = 999000000

# ---- Third Party Service Providers --------------------
# social login
iv.thirdparty.service.google = https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=

# Goole Vision
iv.thirdparty.service.google.api = https://vision.googleapis.com/v1
iv.thirdparty.service.google.api.key = {{ iv_google_api_key }}

# MS Azure
iv.thirdparty.service.azure = https://canadacentral.api.cognitive.microsoft.com/face/v1.0
iv.thirdparty.service.azure.key = {{ iv_azure_key }} 

# Google Firebase
iv.thirdparty.service.firebase = https://fcm.googleapis.com/fcm/send
iv.thirdparty.service.firebase.key = {{ iv_firebase_key }}
# Phone Verification
iv.thirdparty.service.phoneNo.verification.provider = EnStream

# EnStream Teleco
iv.thirdparty.service.enstream.qa.phoneNo.verification.url = http://qa.enstreamidentity.com/api/rest/service/v1/headerInjection-v2 
iv.thirdparty.service.enstream.staging.phoneNo.verification.url = http://apistaging.enstreamidentity.com/api/rest/service/v1/headerInjection-v2
iv.thirdparty.service.enstream.prod.phoneNo.verification.url = http://apiprod.enstreamidentity.com/api/rest/service/v1/headerInjection-v2
#
iv.thirdparty.service.enstream.qa.phoneNo.retrieval = https://qa.enstreamidentity.com/api/rest/service/v1/msisdnRetrieval
iv.thirdparty.service.enstream.staging.phoneNo.retrieval = https://apistaging.enstreamidentity.com/api/rest/service/v1/msisdnRetrieval
iv.thirdparty.service.enstream.prod.phoneNo.retrieval = https://apiprod.enstreamidentity.com/api/rest/service/v1/msisdnRetrieval

# Internal- QAIV Server

enterprise.iv.base.uri = {{ iv_base_url }}


# activation url expiry in 24 hrs = 24*60*60 = 86,400 seconds // 24 hours
enterprise.account.email.activation.expiry = 86400

# unverified account expiry in 24 hrs = 24*60*60 = 86,400 seconds // 24 hours
# set 0 sec to disable account removal
iv.unverified.account.removal.interval = 0

# this token expiry time should be synchronized with OAuth2/OICD Provider expiry time, currently it's set to 15*60*1000 = 900,000  // 15 minutes
enterprise.oauth2.oidc.token.expiry = 900000

# disabled/enable (true/false) enterprise account upon registration 
enterprise.registration.account.status.disabled = true
# enterprise registration email  
enterprise.REGISTRATION_VERIFICATION_EMAIL_SUBJECT_WITH_URL_LINK = Simeio Enterprise Registration Verification
enterprise.REGISTRATION_VERIFICATION_EMAIL_BOBY_WITH_URL_LINK = Hi fname, \r\n  \r\n Thank you for Registering your Simeio Enterprise Account.  \r\n	\r\n To continue using your account, please click on the verification URL Link: https_domain_name_com_/iv/api/v1/enterprise/users/email/verify/vcode  \r\n	\r\n Kind Regards, \r\n Simeio Solutions.											
#
enterprise.DOCUMENT_VERIFICATION_EMAIL_SUBJECT = Simeio Enterprise Document Verification
enterprise.DOCUMENT_VERIFICATION_EMAIL_BOBY = Hi fname, \r\n  \r\n Thank you for uploading your document information online to verify your Level Of Assurance (LOA).  \r\n   \r\n To complete the process, here is your mailed verification code: vcode Call to verify your code.  \r\n   \r\n  Thanks, \r\n  Simeio Solutions.

# SOT Data Provider
iv.thirdparty.service.sot.data.provider = CHI
# Third-Party
iv.thirdparty.service.chi.dev.sot.data.url = https://simeio.poc.apibox.ca/iv/api/v1/sot/verify/users---disabled

#Rename

iv.app.client.registry.ssl = true
iv.app.client.registry.cert.location = {{ iv_client_registry_cert_location }}
iv.app.client.registry.cert.password = {{ iv_client_registry_cert_password }}


